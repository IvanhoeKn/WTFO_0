Часть 1. Поиск ошибок
Замечание 1: хорошо бы приучать к стилю кода (в приведенных листингах он отсутствует)
Задание 1.
Дано натуральное число. Верно ли, что цифра a встречается в нем более k раз?
Исправленный листинг(С++):

#include <iostream>

using namespace std;

int main() {
	int N, a, k, i;
	cin >> N >> a >> k;
	i = 0;	//Счетчик перед дальнейшим использованием не был обнулен
	while (N != 0) {
		if (a == N % 10)
			i++;
		N = N / 10;
	}
	cout << i << endl;
	if (i > k) 
		cout << "YES";
	else
		cout << "NO";
	return 0;
}

Задание 2.
Дано натуральное число. Установить, является ли последовательность его цифр при просмотре их
справа налево упорядоченной по возрастанию.
Исправленный листинг(С++):

#include <iostream>

using namespace std;

int main() {
	int N, a, flag = 0; //По-хорошему тип данных для flag - bool (экономия памяти, в данном случае это, конечно, не критично, но все же..)
	cin >> N;
	a = N / 10;
	while (!flag && (a != 0)) { //Досрочный выход из цикла в случае, когда условие задачи не выполняется. По всей видимости у ученика отсутствует понимание использования флажка.
		if (a % 10 <= N % 10)
			flag = 1;
		N = a; //Это лучше, чем N = N / 10. Выполнятся на 1 операцию меньше. В данном случае просто mov ax bx (условно)
		a = a / 10;
	}
	cout << flag << endl;
	if (flag == 0)
		cout << "YES";
	else
		cout << "NO";
	return 0;
}

Задание 3.
Дан одномерный массив из 15 элементов. Переставить в обратном порядке элементы, расположенные
между вторым и десятым (т.е. с 3 по 9).
Исправленный листинг(С++):

#include <iostream>
#include <vector> //Использование STL, конечно, хорошо, но в учебных целях все же стоит пользоваться динамическим массивом, отслеживая выделенную память

using namespace std;

int main() {
	int n;
	cin >> n;
	vector<int> mas(n);
	for (int i = 0; i < n; i++) //Незнание контейнера vector привело к неверному пониманию индексации элементов
		cin >> mas[i];
	for (int i = 0; i < 2; i++)
		cout << mas[i] << " ";
	for (int i = 8; i > 1; i--)
		cout << mas[i] << " ";
	for (int i = 9; i < n; i++)
		cout << mas[i] << " ";
	return 0;
}




















